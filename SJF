SJF Source code:


#include <stdio.h>
int main() {
int n, i, j, pos, temp;
int p[15], bt[15], wt[15] = {0}, tat[15];
float total_wt = 0, total_tat = 0;
printf("Enter number of processes: ");
scanf("%d", &n);
printf("Enter process IDs: ");
for (i = 0; i < n; i++) {
scanf("%d", &p[i]);
}
printf("Enter burst times: ");
for (i = 0; i < n; i++) {
scanf("%d", &bt[i]);
}
for (i = 0; i < n - 1; i++) {
pos = i;
for (j = i + 1; j < n; j++) {
if (bt[j] < bt[pos]) {
pos = j;
}
}
temp = bt[i]; bt[i] = bt[pos]; bt[pos] = temp;
temp = p[i]; p[i] = p[pos]; p[pos] = temp;
}
for (i = 1; i < n; i++) {
wt[i] = wt[i - 1] + bt[i - 1];
}
for (i = 0; i < n; i++) {
tat[i] = wt[i] + bt[i];
total_wt += wt[i];
total_tat += tat[i];
}
printf("PID\tBT\tWT\tTAT\n");
for (i = 0; i < n; i++) {
printf("%d\t%d\t%d\t%d\n", p[i], bt[i], wt[i], tat[i]);
}
printf("Avg WT = %.2f\n", total_wt / n);
printf("Avg TAT = %.2f\n", total_tat / n);
return 0;
}
